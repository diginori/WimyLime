<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<meta name="viewport" content="target-densitydpi=device-dpi, width=device-width, user-scalable=no" />
<title>WimyLime Player</title>
<link href="style.css" rel="stylesheet" type="text/css" />

<script src="http://www.google.com/jsapi" type="text/javascript"></script>
<script src="common.js" type="text/javascript"></script>

<script type="text/javascript">
var TOUCH_HEIGHT = 40.0;
var TOUCH_WIDTH = CANVAS_WIDTH / 3.0;
var NOTE_SHOWING_LENGTH = 5.0;
var NOTE_HEIGHT = 3.0;

var NOTE_AREA_HEIGHT = CANVAS_HEIGHT - TOUCH_HEIGHT;
var NOTE_TOUCH_CHECK_BAR_POSITION = 10.0;

function onGamePad1()
{
}

function onGamePad2()
{
}

function onGamePad3()
{
}

function onGamePad4()
{
}

function getShowingNotes(notes)
{
	var currentVideoTime = g_youtubePlayer.getCurrentTime();
	var bottomTime = currentVideoTime - NOTE_SHOWING_LENGTH;
	var topTime = currentVideoTime + NOTE_SHOWING_LENGTH;
	
	var ret = [];
	
	for ( var i=0; i<notes.length; ++i)
	{
		if ( notes[i] >= bottomTime && notes[i] <= topTime )
		{
			ret.push(notes[i]);
		}
	}
	
	return ret;
}

function drawNoteImage(context, img, centerX, centerY)
{
	var centerOfImage = img.width / 2;
	var tileUnitHeight = img.width;
	var numberOfTile = img.height / tileUnitHeight;
	
	var drawTileIndex = frameAcc % numberOfTile;
	
	context.drawImage(img, 0, drawTileIndex * tileUnitHeight, img.width, tileUnitHeight, centerX - centerOfImage, centerY - centerOfImage, img.width, tileUnitHeight);
}

function drawNote(context, currentVideoTime, notes, loadedImage, x)
{
	var notes = getShowingNotes(notes);
	
	var SPEED = 1;
	
	for ( var i=0; i<notes.length; ++i )
   	{
		var y = (CANVAS_HEIGHT -  NOTE_TOUCH_CHECK_BAR_POSITION) - (( notes[i] - currentVideoTime ) * 200.0 * SPEED );
		
		if ( y >= (CANVAS_HEIGHT)) continue;
		
		drawNoteImage(context, loadedImage, x + CANVAS_WIDTH/4/2, y);
	}
}

function drawAllNote(context)
{
	if ( g_youtubePlayer && g_youtubePlayer.getCurrentTime )
	{
		var currentVideoTime = getFixedYoutubeCurrentTime();
		var notes = {pad1 : [ 6.017, 6.339, 6.688000000000001, 7.043, 7.4110000000000005, 7.738, 8.121, 8.48, 19],pad2 : [ 8.905000000000001, 9.238, 9.592, 9.954, 10.321000000000002, 10.672, 11.036999999999999, 11.42, 14.684999999999999, 15, 15.336000000000002, 15.707, 16.102, 16.481, 16.808, 17.216],pad3 : [ 11.77, 12.120000000000001, 12.464, 12.821000000000002, 13.203, 13.536000000000001, 13.891, 14.312000000000001, 17.592, 17.951, 18.296, 18.684],pad4 : [ ],};
		//var notes = {pad1 : [ 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0],pad2 : [ ],pad3 : [],pad4 : [],};
		
		drawNote(context, currentVideoTime, notes.pad1, image_note1, 0);
		drawNote(context, currentVideoTime, notes.pad2, image_note2, 120);
		drawNote(context, currentVideoTime, notes.pad3, image_note3, 240);
		drawNote(context, currentVideoTime, notes.pad4, image_note4, 360);
	}
}

var frameAcc = 0;
function drawBackground(context)
{
	++frameAcc;
	
	var strength = Math.floor(Math.abs(Math.sin(frameAcc/30.0)) * 30.0);
	var rgb = "rgb(" + strength + "," + strength + "," + strength + ")";
	context.fillStyle = rgb;
	context.fillRect(0,0, CANVAS_WIDTH, CANVAS_HEIGHT);
}

var pressed_Z = false;
var pressed_X = false;
var pressed_C = false;
var pressed_V = false;

function drawPadEffect(context)
{
	const EFFECT_WIDTH = CANVAS_WIDTH / 4;
	const EFFECT_HEIGHT = CANVAS_HEIGHT;
	const EFFECT_MARGIN = 2;

	var startX = 0;

	context.fillStyle="rgba(255,255,255, 0.1)";
	if ( pressed_Z )
	{
		context.fillRect(startX + EFFECT_MARGIN, 0, EFFECT_WIDTH - ( 2 * EFFECT_MARGIN ), EFFECT_HEIGHT);
	}
	
	startX += EFFECT_WIDTH;
	
	if ( pressed_X )
	{
		context.fillRect(startX + EFFECT_MARGIN, 0, EFFECT_WIDTH - ( 2 * EFFECT_MARGIN ), EFFECT_HEIGHT);
	}
	
	startX += EFFECT_WIDTH;
	if ( pressed_C )
	{
		context.fillRect(startX + EFFECT_MARGIN, 0, EFFECT_WIDTH - ( 2 * EFFECT_MARGIN ), EFFECT_HEIGHT);
	}
	
	startX += EFFECT_WIDTH;
	if ( pressed_V )
	{
		context.fillRect(startX + EFFECT_MARGIN, 0, EFFECT_WIDTH - ( 2 * EFFECT_MARGIN ), EFFECT_HEIGHT);
	}
}

function drawCheckBar(context)
{
	context.fillStyle = "rgb(255,255,255)";
	context.fillRect(0, CANVAS_HEIGHT - NOTE_TOUCH_CHECK_BAR_POSITION, CANVAS_WIDTH, 2);
}

function draw()
{
	var canvas = document.getElementById("mycanvas");
	
	if ( canvas == null ) return;
	
	var context = canvas.getContext("2d");

	drawBackground(context);
	
	drawAllNote(context);
	
	drawCheckBar(context);
	drawPadEffect(context);
}

startMainLoop(draw);
      
</script>
</head>
<body>
	<div id="allcontent">
		<div id="videoDiv">Loading...</div>
		<canvas id="mycanvas" width="480" height="400"></canvas>
		<div id="controller">
			<table id="inputTable">
				<tr>
					<td id="inputPad1"></td>
					<td id="inputPad2"></td>
					<td id="inputPad3"></td>
					<td id="inputPad4"></td>
				</tr>
			</table>
		</div>
	</div>
	<br/>
	<br/>
	<br/>
	<div id="output" style="background-color:red; height: 500px;">
	</div>
	<script>
	document.getElementById("inputPad1").addEventListener("touchstart", onTouchPad1, false);
	document.getElementById("inputPad2").addEventListener("touchstart", onTouchPad2, false);
	document.getElementById("inputPad3").addEventListener("touchstart", onTouchPad3, false);
	document.getElementById("inputPad4").addEventListener("touchstart", onTouchPad4, false);
	
	document.getElementById("inputPad1").addEventListener("touchend", onTouchPadEnd1, false);
	document.getElementById("inputPad2").addEventListener("touchend", onTouchPadEnd2, false);
	document.getElementById("inputPad3").addEventListener("touchend", onTouchPadEnd3, false);
	document.getElementById("inputPad4").addEventListener("touchend", onTouchPadEnd4, false);
	</script>
	<script src="youtube.js" type="text/javascript"></script>

</body>
</html>
â€‹
